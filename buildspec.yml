version: 0.2

phases:
  install:
    commands:
      - echo "Installing dependencies"
      - if ! command -v python3.11 &>/dev/null; then
          echo "Python 3.11 not found. Installing Python 3.11...";
          yum install -y gcc openssl-devel bzip2-devel libffi-devel;
          cd /usr/src;
          wget https://www.python.org/ftp/python/3.11.0/Python-3.11.0.tgz;
          tar xzf Python-3.11.0.tgz;
          cd Python-3.11.0;
          ./configure --enable-optimizations;
          make altinstall;
          ln -s /usr/local/bin/python3.11 /usr/bin/python3.11;
        else
          echo "Python 3.11 is already installed.";
        fi
  pre_build:
    commands:
      - echo "Running pre-build phase"
      - python3.11 --version  
  build:
    commands:
      - echo "Building the SAM application"
      - sam build --template-file template.yaml  
  post_build:
  commands:
    - echo "Checking CloudFormation stack status"
    - |
      STACK_STATUS=$(aws cloudformation describe-stacks --stack-name ResumeWebsiteStack --query 'Stacks[0].StackStatus' --output text)
      if [ "$STACK_STATUS" = "ROLLBACK_FAILED" ] || [ "$STACK_STATUS" = "DELETE_FAILED" ]; then
        echo "Stack is in $STACK_STATUS state. Skipping deletion...";
        aws cloudformation delete-stack --stack-name ResumeWebsiteStack || echo "Failed to delete stack, proceeding with deployment."
      fi
    - echo "Checking if the build_function exists"
    - if ! aws lambda get-function --function-name build_function; then
        echo "build_function does not exist. Deploying function...";
        sam deploy --template-file template.yaml --stack-name ResumeWebsiteStack --capabilities CAPABILITY_IAM --s3-bucket adam-agbaria;
      else
        echo "build_function exists. Proceeding with deployment.";
      fi
    - echo "Triggering the build_function Lambda"
    - >
      aws lambda invoke --function-name build_function --payload '{"project_name": "ResumeWebsite", "s3_bucket": "adam-agbaria"}' /tmp/lambda_output.txt
    - echo "Sending deployment notification"
    - >
      aws lambda invoke --function-name notifications --payload '{"topic_arn": "your-sns-topic-arn", "message": "Resume Website Deployed Successfully"}' /tmp/notify_output.txt


artifacts:
  files:
    - '**/*'